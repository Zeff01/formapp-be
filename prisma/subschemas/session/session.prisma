import { users } from "..\user\user"
import { payments } from "..\payments\payments"
import { SesssionType, PackageType } from "..\enum\enum"
// model sessions {
//   id        String     @id @default(uuid()) @map("_id")
//   name      String
//   teams     String[]   @default(["Red Team", "Orange Team", "Yellow Team", "Green Team", "Blue Team", "White Team", "Violet Team"])
//   maxMember Int
//   price     Float
//   founderId String
//   code      String     @unique
//   createdAt DateTime?  @default(now()) @map("created_at")
//   updatedAt DateTime?  @default(now()) @map("updated_at")
//   founder   users      @relation(fields: [founderId], references: [id])
//   payments  payments[]
// }
model sessions {
  id         String       @id @default(uuid()) @map("_id")
  name       String
  location   String
  date       String
  time       String
  createdAt  DateTime?    @default(now()) @map("created_at")
  updatedAt  DateTime?    @default(now()) @map("updated_at")
  payments   payments[]
  subSession subSession[]
}

model subSession {
  id          String       @id @default(uuid()) @map("_id")
  sessionType SesssionType
  coach       String
  noofTeams   Int
  maxPlayers  Int
  maxTeams    Int
  createdAt   DateTime?    @default(now()) @map("created_at")
  updatedAt   DateTime?    @default(now()) @map("updated_at")
  sessionId   String
  sessions    sessions     @relation(fields: [sessionId], references: [id])
  teams       teams[]
  rates       rates[]
  users       users?       @relation(fields: [usersId], references: [id])
  usersId     String?
}

model teams {
  id           String     @id @default(uuid()) @map("_id")
  name         String
  color        String
  subSessionId String
  subSession   subSession @relation(fields: [subSessionId], references: [id])
  createdAt    DateTime?  @default(now()) @map("created_at")
  updatedAt    DateTime?  @default(now()) @map("updated_at")
}

model rates {
  id           String      @id @default(uuid()) @map("_id")
  package      String
  cashRate     Float
  onlineRate   Float
  packageType  PackageType
  createdAt    DateTime?   @default(now()) @map("created_at")
  updatedAt    DateTime?   @default(now()) @map("updated_at")
  subSessionId String
  subSession   subSession  @relation(fields: [subSessionId], references: [id])
}
